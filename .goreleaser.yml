# GoReleaser configuration for google-admin-client (gac)
# https://goreleaser.com

version: 2

before:
  hooks:
    # Ensure dependencies are up to date
    - go mod tidy
    # Run tests before building
    - go test ./...

builds:
  - id: gac
    main: .
    binary: gac
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    # Exclude incompatible combinations
    ignore:
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w
      - -X main.Version={{.Version}}
      - -X main.Commit={{.Commit}}
      - -X main.Date={{.Date}}
      - -X main.BuiltBy=goreleaser
    flags:
      - -trimpath

archives:
  - id: gac-archive
    format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - CREDENTIALS.md
      - ARCHITECTURE.md
      - DEBUGGING.md

checksum:
  name_template: 'checksums.txt'

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - 'README'
      - 'typo'
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug Fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: 'Security Updates'
      regexp: '^.*?sec(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: 'Performance Improvements'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 3
    - title: Others
      order: 999

dockers:
  - id: gac-amd64
    use: buildx
    goos: linux
    goarch: amd64
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gac:{{ .Version }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gac:latest-amd64"
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.description=Google Workspace Admin CLI"
    dockerfile: Dockerfile.goreleaser

  - id: gac-arm64
    use: buildx
    goos: linux
    goarch: arm64
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gac:{{ .Version }}-arm64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gac:latest-arm64"
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.description=Google Workspace Admin CLI"
    dockerfile: Dockerfile.goreleaser

docker_manifests:
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gac:{{ .Version }}"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gac:{{ .Version }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gac:{{ .Version }}-arm64"

  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gac:latest"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gac:latest-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gac:latest-arm64"

release:
  github:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: "{{ .ProjectName }}"
  prerelease: auto
  mode: append
  header: |
    ## Google Workspace Admin CLI (gac) {{ .Version }}

    Release Date: {{ .Date }}

    ### Installation

    **Homebrew (macOS/Linux):**
    ```bash
    brew install {{ .Env.GITHUB_REPOSITORY_OWNER }}/tap/gac
    ```

    **Manual Installation:**
    Download the appropriate binary for your platform below.

  footer: |
    ---

    ### Docker

    ```bash
    docker pull ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/gac:{{ .Version }}
    ```

    ### Checksums

    All binaries are checksummed. Verify downloads with:
    ```bash
    sha256sum -c checksums.txt
    ```

    **Full Changelog**: https://github.com/{{ .Env.GITHUB_REPOSITORY_OWNER }}/{{ .ProjectName }}/compare/{{ .PreviousTag }}...{{ .Tag }}
